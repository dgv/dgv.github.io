<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on dgv</title><link>http://localhost:1313/blog/</link><description>Recent content in Blogs on dgv</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 11 Apr 2025 00:00:00 -0300</lastBuildDate><atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>when brazilian tech shines</title><link>http://localhost:1313/blog/br-shines/</link><pubDate>Fri, 11 Apr 2025 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/br-shines/</guid><description/></item><item><title>hardening containers for your own good</title><link>http://localhost:1313/blog/hardening-containers/</link><pubDate>Sun, 23 Mar 2025 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/hardening-containers/</guid><description/></item><item><title>zen of zig zon</title><link>http://localhost:1313/blog/2025-01-25-zig-zon/</link><pubDate>Sat, 25 Jan 2025 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2025-01-25-zig-zon/</guid><description>&lt;p>I started to use Zig on 0.11 vendoring dependencies manually and was pretty amazing when 0.12 come out and start to use zon, but eventually we enconter
some packages without &lt;code>.zon&lt;/code> like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;/code>&lt;/pre>&lt;/div>&lt;p>so, we need to add it as artifact&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-zig" data-lang="zig">&lt;/code>&lt;/pre>&lt;/div>&lt;p>lets just recap&lt;/p>
&lt;pre tabindex="0">&lt;code>$ zig fetch -h
Usage: zig fetch [options] &amp;lt;url&amp;gt;
Usage: zig fetch [options] &amp;lt;path&amp;gt;

 Copy a package into the global cache and print its hash.
 &amp;lt;url&amp;gt; must point to one of the following:
 - A git+http / git+https server for the package
 - A tarball file (with or without compression) containing
 package source
 - A git bundle file containing package source

Examples:

 zig fetch --save git+https://example.com/andrewrk/fun-example-tool.git
 zig fetch --save https://example.com/andrewrk/fun-example-tool/archive/refs/heads/master.tar.gz

Options:
 -h, --help Print this help and exit
 --global-cache-dir [path] Override path to global Zig cache directory
 --debug-hash Print verbose hash information to stdout
 --save Add the fetched package to build.zig.zon
 --save=[name] Add the fetched package to build.zig.zon as name
 --save-exact Add the fetched package to build.zig.zon, storing the URL verbatim
 --save-exact=[name] Add the fetched package to build.zig.zon as name, storing the URL verbatim
&lt;/code>&lt;/pre>&lt;p>the worse scenario is just use the remote package of master brach, basically it can change broken the reference forcing us to fetch it again&amp;hellip;&lt;/p></description></item><item><title>c10m problem revisited</title><link>http://localhost:1313/blog/2024-11-29-c10m-revisited/</link><pubDate>Fri, 29 Nov 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-11-29-c10m-revisited/</guid><description>&lt;p>The C10M Problem is about how on a modern server, you should be able to easily handle 10M concurrent connections with solid throughput and low jitter. Handling that level of traffic generally requires a more specialized approach than is offered by a stock Linux kernel.&lt;/p>
&lt;p>Using a stock debian-8 image and a Go server you can handle 10M concurrent connections with low throughput and moderate jitter if the connections are mostly idle. The server design for this example is just about the simplest websocket server that is useful for anything. It is similar to a push notification server like the iOS Apple Push Notification Service, but without the ability to store messages if the client is offline.&lt;/p></description></item><item><title>sqlite over s3</title><link>http://localhost:1313/blog/2024-11-10-sqlite-over-s3/</link><pubDate>Sun, 10 Nov 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-11-10-sqlite-over-s3/</guid><description>&lt;p>We love &lt;a href="https://mcfunley.com/choose-boring-technology">boring technology&lt;/a>, sqlite is everywere, solid stunning performace and features,
but it was developed to be embeded to the app without a management system, developers love this simplicity so for years people and
companies are trying to develop solutions to distribute sqlite and make the stored data broadly available, lately:&lt;/p>
&lt;ul>
&lt;li>you can run your sqlite cluster over &lt;a href="https://www.sqlite.org/wal.html">wal&lt;/a>/&lt;a href="https://raft.github.io/">raft&lt;/a> with &lt;a href="https://rqlite.io/">rqlite&lt;/a>&lt;/li>
&lt;li>fly has &lt;a href="https://fly.io/docs/litefs/">LiteFS&lt;/a>&lt;/li>
&lt;li>cloudflare has &lt;a href="https://developers.cloudflare.com/d1/">D1&lt;/a>&lt;/li>
&lt;li>turso and &lt;a href="https://docs.turso.tech/libsql">libSQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Recently during the rewrite of my &lt;a href="https://github.com/dgv/play.zig">Zig playground&lt;/a> project I decided to move the snipets from Google Datastore to Sqlite, but I don&amp;rsquo;t want to manage any
cloud-serveless-uber-solution crazy pricing, even with free quota. I tried turso, liked the idea of &lt;a href="https://turso.tech/blog/introducing-embedded-replicas-deploy-turso-anywhere-2085aa0dc242">embeded replicas&lt;/a>,
but had problems testing on free-tier, imagine you&amp;rsquo;re testing your app with initial data then everything is gone for no reason, well later they report the &lt;a href="https://turso.tech/blog/incident-2023-12-04-data-leak-and-loss-in-some-free-tier-databases-7cba5bc7">incident&lt;/a>.
Just want something simple, don&amp;rsquo;t want to manage a cluster or be depedent of a provider implementation in particular.&lt;/p></description></item><item><title>web3 is here</title><link>http://localhost:1313/blog/2024-09-27-web3-is-here/</link><pubDate>Fri, 27 Sep 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-09-27-web3-is-here/</guid><description>&lt;h2 id="tldr">tl;dr&lt;/h2>
&lt;p>I&amp;rsquo;m aware of current criticism, I&amp;rsquo;m follower of &lt;a href="https://www.web3isgoinggreat.com/">web3 is going just great&lt;/a> from &lt;a href="https://mastodon.social/@molly0xfff@hachyderm.io">Molly White&lt;/a> but also a &lt;a href="https://andrewkelley.me/post/the-techno-optimist-manifesto.html">techno-optimist&lt;/a> &lt;em>Ã  la Thoreau&lt;/em> (not &lt;a href="https://en.wikipedia.org/wiki/Techno-Optimist_Manifesto">Andressen&amp;rsquo;s definition&lt;/a>),
so even working close to blockchains and using bitcoin since 2014 I always been skeptical until last years events. The idea here is not to convince or promote anything, just summarize some definitions and references about how things are going at this point.&lt;/p>
&lt;h2 id="btw-what-is-web3">btw, what is web3?&lt;/h2>
&lt;p>The term &amp;ldquo;web3&amp;rdquo; was coined in 2014 by Ethereum co-founder &lt;a href="https://en.wikipedia.org/wiki/Gavin_Wood">Gavin Wood&lt;/a>, is an idea for a new iteration of the World Wide Web which incorporates concepts such as &lt;strong>decentralization&lt;/strong>, &lt;strong>blockchain&lt;/strong> technologies, and &lt;strong>token-based&lt;/strong> economics.&lt;/p></description></item><item><title>banzai! why another code editor?</title><link>http://localhost:1313/blog/2024-07-20-banzai-why-another-code-editor/</link><pubDate>Sat, 20 Jul 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-07-20-banzai-why-another-code-editor/</guid><description>&lt;p>My first editor for code was Microsoft Notepad, why? Because Internet Explorer on Win95 used to show page source there, so I like to edit HTML and batch scripts using it, then FrontPage Express (to have syntax highlighting support) and later notepad++.&lt;/p>
&lt;p>When finally started to use Linux and later OpenBSD choose vi, yes vi, not iMproved version, emacs is not available by default, used vi for notes, shell scripting then some C, found funny the &lt;code>~&lt;/code> marks, buffer manipulation and shortcuts, never was a advanced user, or have complex &lt;code>.vimrc&lt;/code>, or problems to &lt;code>:q!&lt;/code>.&lt;/p></description></item><item><title>zig for golang programmers</title><link>http://localhost:1313/blog/2024-06-21-zig-for-golang-programmers/</link><pubDate>Fri, 21 Jun 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-06-21-zig-for-golang-programmers/</guid><description>&lt;p>tl;dr&lt;/p>
&lt;p>I have been using Go for more than a decade, here I will explain my main motivations to use Zig over Rust (which I am still learning too) and
will give some quick examples of interesting features in comparison with Go.&lt;/p>
&lt;p>10 points&lt;/p>
&lt;p>&lt;a href="https://medium.com/@vladimirvivien/things-i-like-about-zig-as-a-go-programmer-75eb02aab00f">https://medium.com/@vladimirvivien/things-i-like-about-zig-as-a-go-programmer-75eb02aab00f&lt;/a>&lt;/p>
&lt;h2 id="sumary">sumary&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="">motivations&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#values">values&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="">why not rust?&lt;/a>&lt;/li>
&lt;li>new stuff
&lt;ul>
&lt;li>&lt;a href="">build system (aka zig trojan)&lt;/a>&lt;/li>
&lt;li>&lt;a href="">memory allocation&lt;/a>&lt;/li>
&lt;li>&lt;a href="">wtf is comptime&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>cool diffs
&lt;ul>
&lt;li>&lt;a href="">error handling&lt;/a>&lt;/li>
&lt;li>&lt;a href="">test stuff together&lt;/a>&lt;/li>
&lt;li>&lt;a href="">concurrency&lt;/a>&lt;/li>
&lt;li>&lt;a href="">easy C interoperability&lt;/a>&lt;/li>
&lt;li>&lt;a href="">btw generics&lt;/a>&lt;/li>
&lt;li>&lt;a href="">&lt;em>habemus&lt;/em> stdlib&lt;/a>
&lt;ul>
&lt;li>udp, regexp,time&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="">finally small binaries&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="">some tips&lt;/a>&lt;/li>
&lt;li>&lt;a href="">final thoughts&lt;/a>&lt;/li>
&lt;li>&lt;a href="#references">more references&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="motivations">motivations&lt;/h2>
&lt;p>I&amp;rsquo;ve been using go over a decade and never considered it as &lt;em>systems language&lt;/em>, but as &lt;em>cloud language&lt;/em>, my first project was rest api using gorilla in 2012.
complete toolchain, rich stdlib, concurrency.&lt;/p></description></item><item><title>shokunin tamashÄ«</title><link>http://localhost:1313/blog/2024-06-15-shokunin-tamashi/</link><pubDate>Sat, 15 Jun 2024 00:00:00 -0300</pubDate><guid>http://localhost:1313/blog/2024-06-15-shokunin-tamashi/</guid><description>&lt;h3 id="tldr">&lt;em>tl;dr&lt;/em>&lt;/h3>
&lt;p>I&amp;rsquo;m back, blogging again, after so many years. First of all, &lt;em>shokunin tamashÄ«&lt;/em> is the japanese term for the spirit of craftmanship. I&amp;rsquo;ll explain below the term, how and why it inspires me.&lt;/p>
&lt;h3 id="intro">intro&lt;/h3>
&lt;p>I always been interested in japanese culture, besides all influence during my childhood, &lt;em>sansei&lt;/em> friends and neighborhood stores, animes etc, I really start to dive into with &lt;a href="https://archive.org/stream/ZenToDoneTheUltimateSimpleProductivitySystemByLeoBabauta/zen_to_done.Leo_Babauta-jorel314_djvu.txt">Zen to Done&lt;/a> method after so many influences in &lt;a href="https://www.zenprogrammer.org/en/10-rules-of-a-zen-programmer.html">programing&lt;/a>,
then start to read books about Zen, even tried &lt;a href="https://en.wikipedia.org/wiki/Zazen">zazen&lt;/a> for some time, the philosophy was pretty natural for me as low profile person, introspective self-taught technician and programmer attracted by &lt;a href="http://www.extremeprogramming.org/rules/simple.html">simplicity&lt;/a>, &lt;a href="http://lawsofsimplicity.com/">simple things&lt;/a> and &lt;a href="https://www.goodreads.com/quotes/897002-our-life-is-frittered-away-by-detail-simplicity-simplicity-simplicity-i">simplify&lt;/a>&amp;hellip;
Finally watched Jiro Dreams of Sushi &lt;a href="https://www.imdb.com/title/tt1772925/">movie&lt;/a> and was presented to the &lt;em>shokunin&lt;/em> term and how the &lt;em>philosophy&lt;/em> relates with me.&lt;/p></description></item></channel></rss>